[{"/home/farzana/projects/sorting-visualizer/sorting-visualizer-project/src/index.js":"1","/home/farzana/projects/sorting-visualizer/sorting-visualizer-project/src/App.js":"2","/home/farzana/projects/sorting-visualizer/sorting-visualizer-project/src/reportWebVitals.js":"3","/home/farzana/projects/sorting-visualizer/sorting-visualizer-project/src/SortingVisualizer/SortingVisualizer.jsx":"4"},{"size":506,"mtime":1611565272945,"results":"5","hashOfConfig":"6"},{"size":231,"mtime":1611565350127,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611506228511,"results":"8","hashOfConfig":"6"},{"size":2047,"mtime":1611602949740,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rdhxhb",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/home/farzana/projects/sorting-visualizer/sorting-visualizer-project/src/index.js",[],"/home/farzana/projects/sorting-visualizer/sorting-visualizer-project/src/App.js",[],"/home/farzana/projects/sorting-visualizer/sorting-visualizer-project/src/reportWebVitals.js",[],"/home/farzana/projects/sorting-visualizer/sorting-visualizer-project/src/SortingVisualizer/SortingVisualizer.jsx",["19"],"import React, { useState,useEffect } from \"react\";\nimport \"./SortingVisualizer.css\";\n\nexport default function SortingVisualizer() {\n  const [array, setArray] = useState([7, 370, 345, 120, 115, 87, 483, 106, 71, 209, 77, 121, 323, 180, 178, 190, 280, 196, 179, 63, 160, 93, 417, 169, 311, 236, 209, 478, 474, 79, 311, 371, 254, 279, 292, 353, 232, 59, 335, 355, 62, 434, 440, 48, 166, 59, 124, 279, 312, 149, 245, 64, 310, 388, 413, 251, 52, 241, 214, 423, 116, 20, 22, 87, 214, 98, 161, 426, 60, 136, 270, 492, 325, 307, 266, 50, 347, 489, 403, 273, 231, 432, 242, 344, 417, 372, 137, 6, 421, 294, 439, 7, 478, 168, 160, 26, 196, 500, 76, 444,419, 400, 342, 86, 113, 343, 148, 302, 248, 90, 150, 135, 378, 208, 349, 463, 476, 438, 414, 287, 148, 101, 73, 35, 20, 87, 226, 145, 280, 206, 480, 398, 119, 190, 214, 111, 224, 276, 452, 134, 413, 321, 171, 183, 13, 162, 470, 474, 46, 126, 441, 308, 236, 373, 223, 87, 276, 437, 438, 207, 158, 193, 261, 102, 226, 144, 35, 17, 424, 450, 188, 230, 449, 79, 431, 386, 199, 142, 311, 45, 74, 181, 271, 380, 130, 144, 180, 176, 228, 321, 321, 191, 426, 77, 243, 81, 114, 396, 69, 485]);\n  const[len,setLen]=useState(0);\n\n  function randomIntFromIntervals(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  const change=()=>{\n    setLen(Math.random());\n  }\n  \n\n  const getArray = () => {\n    for (let i = 0; i < 200; i++) {\n      array[i] = randomIntFromIntervals(5, 500);\n    }\n    setArray(array);\n  };\n\n  useEffect(() => {\n    getArray();\n  },[len]);\n\n  const mergeSort=()=>{}\n  const quickSort=()=>{}\n  const selectionSort=()=>{}\n\n  return (\n    <div className=\"array-container\">\n    \n      {array.map((itms, idx) => (\n        <div className=\"array-bar\" key={idx} style={{height:`${itms}px`}}>\n        </div>\n      ))}\n      <button onClick={change}>Generate New Array</button>\n      <button onClick={mergeSort}>Merge Sort</button>\n      <button onClick={quickSort}>Quick Sort</button>\n      <button onClick={selectionSort}>Selection Sort</button>\n      \n    </div>\n  );\n}\n",{"ruleId":"20","severity":1,"message":"21","line":26,"column":5,"nodeType":"22","endLine":26,"endColumn":10,"suggestions":"23"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getArray'. Either include it or remove the dependency array.","ArrayExpression",["24"],{"desc":"25","fix":"26"},"Update the dependencies array to be: [getArray, len]",{"range":"27","text":"28"},[1516,1521],"[getArray, len]"]